<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.service.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.web.service.entity.UserRole">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="ROLE_CODE" jdbcType="VARCHAR" property="roleCode" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="CREATE_BY" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_DATE" jdbcType="TIMESTAMP" property="createDate" />
    <result column="MODIFIED_BY" jdbcType="VARCHAR" property="modifiedBy" />
    <result column="MODIFIED_DATE" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="SORTNO" jdbcType="INTEGER" property="sortno" />
    <result column="STATE" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, ROLE_CODE, ROLE_NAME, CREATE_BY, CREATE_DATE, MODIFIED_BY, MODIFIED_DATE, SORTNO, 
    STATE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="getUserRoleInfos" resultType="com.web.service.entity.UserRole">
    select a.user_code userCode,b.id,b.role_code roleCode,b.role_name roleName,
    b.create_by createBy,b.create_date createDate,b.modified_by modifiedBy,b.modified_date modifiedDate,b.sortno,b.state
    from user a,user_role b,user_role_r r
    where a.user_code = r.user_code and b.role_code = r.role_code and b.state = #{state}
    <if test="userCode != null">
      and a.user_code = #{userCode}
    </if>
    <if test="roleCode != null">
      and b.role_code = #{roleCode}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.web.service.entity.UserRole">
    insert into user_role (ID, ROLE_CODE, ROLE_NAME, 
      CREATE_BY, CREATE_DATE, MODIFIED_BY, 
      MODIFIED_DATE, SORTNO, STATE
      )
    values (#{id,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifiedBy,jdbcType=VARCHAR}, 
      #{modifiedDate,jdbcType=TIMESTAMP}, #{sortno,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.web.service.entity.UserRole">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="roleCode != null">
        ROLE_CODE,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="createBy != null">
        CREATE_BY,
      </if>
      <if test="createDate != null">
        CREATE_DATE,
      </if>
      <if test="modifiedBy != null">
        MODIFIED_BY,
      </if>
      <if test="modifiedDate != null">
        MODIFIED_DATE,
      </if>
      <if test="sortno != null">
        SORTNO,
      </if>
      <if test="state != null">
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sortno != null">
        #{sortno,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.service.entity.UserRole">
    update user_role
    <set>
      <if test="roleCode != null">
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        CREATE_BY = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        MODIFIED_BY = #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        MODIFIED_DATE = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sortno != null">
        SORTNO = #{sortno,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        STATE = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.service.entity.UserRole">
    update user_role
    set ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
      ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      CREATE_BY = #{createBy,jdbcType=VARCHAR},
      CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      MODIFIED_BY = #{modifiedBy,jdbcType=VARCHAR},
      MODIFIED_DATE = #{modifiedDate,jdbcType=TIMESTAMP},
      SORTNO = #{sortno,jdbcType=INTEGER},
      STATE = #{state,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>